language: bash
sudo: required
env:
  global:
  - CACHE_DIR=$HOME/.cache/docker
  - CACHE_FILE_ARM=$CACHE_DIR/arm.tar.gz
  - CACHE_FILE_AMD64=$CACHE_DIR/amd64.tar.gz
  - CACHE_FILE_BUILD=$CACHE_DIR/build.tar.gz
  - CACHE_FILE_MANIFEST=$CACHE_DIR/manifest.tar.gz
  - secure: bCU09wXZkOm+iJAm2Kc1UQSSUowR4g8VBhMO4NpyfaKdGTRrJMdXvSH95OlykLu43Am16p1kzn+zmikwJrrBUi8bXoTZsQsdUCagQAEFQY81IlzQ8RPZwtYa+B0UgrhAwNmov83urlj7Y8DWSSuvNjMAR10sU5K8kCwl6p8/khFce7Z6WxLnH3zPKQ2ONKiIIdjVE0X4Rll3M6g7JPpTR85JcEME//OagdScIbGWjyO/B/26H4rXrBDAudbqOIYtS2PIaR5RfZxRrjP9B7QJdo0BUpC+w24Y0TdMWiRLH3Yqzz/K26dwjgnNEiW+nZiY2OZRxA5J3efV4fbVhVfe3LxpfCI1I0nZEToCZ9iom3aQpmfNTY+bk0Dj9JTDz4apvWLqtppwDa3KSYM3nweOtCZ9Ptxdv3fWVojCTwNQkkUoFVyAIMzyB2pnTlYDnGc/60b3OGdDS+T8b/SB+229Gvj5Eo5uvdRHO116Bm5GxxNm3/PEydeyU8bPBD0/SeyxHAmOwPnZQCV6W7aBzkaugm75LmJiGbT2iUM1VpzV3t/GmJyKr7GrUSYrR0vL5lok61qP1swLSMvh9aaJXsnFY3EIOHUDBejmSbP0E21YsrC1VKDu7dtK8joRXM9z1HVKZ+08PE52TZwRBoKEp42YZBkmPGiteNqvB7mbF7MH97M=
  - secure: vyBovE2rsexl+ZSZPQbikVqpakx1oH/Jx0dQSjM98hrjFfjjnWhsl3Hy2k2Vb3B5vkI8+R5IEvZ0Hc69dfAZP7HPwFjs1ufDkX340cdsnJmdyD27joh+M5LSUek6EhDZFe9k+1i0wI6fC4/sFszhf82RQuggFlcb8bhboLwIElBFQ84rK2JDLLcSMGngyX8iYAcdrINISuJqJPKsd/axcH8vvFYF8SeGMYXAz9whG/47r6DGNTvMiVFN+IJKDLxnOIMXRp+6SqKeLm7mGqTzcIUAgbBlz/+/peQYdzl8DmhzMvxJ4dmRCIsbjX0K1M7ytV3oaMFlpilV/HxhsZoXuC1ssxz6vR0hhZJRCe4IzEHcxj2T8Ccm2GgliZ7WSkpZMRYcfJ7x5YmH61GMso/rOnTAD0xV/lrGSZkbTxnRC0Sf0aNFZrsHGSfCobx55re1Z62v79+2UU9XizYLCrqRgCdFNOUcuesG4TPIC/SCAq/U8dNVaiXKP3oTuq6/dcLFxoyfT1aQsx7h5WJe3cTGxUj7HVJeUjqkW86ZxwQrnp6RPwrHe3pjLvuXNYdcl7r6bc5/U20keaRWEBqjKJMtVElMrSVhw4Anj8znO7fzgq8doLBHaDXiyZYiMmRrhxG0AfMeKNQB7TF6++yp27MPeQLqA320/Y5NB+zDKSxf/ig=
cache:
  directories:
  - $CACHE_DIR
services:
- docker
before_install:
- echo $CACHE_FILE_BUILD
- if [ -f ${CACHE_FILE_BUILD} ]; then gunzip -c ${CACHE_FILE_BUILD} | docker load;
  fi
- if [ -f ${CACHE_FILE_AMD64} ]; then gunzip -c ${CACHE_FILE_AMD64} | docker load;
  fi
- if [ -f ${CACHE_FILE_ARM} ]; then gunzip -c ${CACHE_FILE_ARM} | docker load; fi
- if [ -f ${CACHE_FILE_MANIFEST} ]; then gunzip -c ${CACHE_FILE_MANIFEST} | docker
  load; fi
- docker run --entrypoint=/bin/sh --rm -i  -v ${PWD}:/host ekellener/minecraft-build
  -c 'cp craft*.jar /host'
install:
- docker login -u $docker_username -p $docker_password
- docker pull ekellener/manifest-tool-docker &
- docker build -t ekellener/minecraft-arm -f Dockerfile.arm . && docker push ekellener/minecraft-arm
  &
- docker build -t ekellener/minecraft-amd64 -f Dockerfile.amd64 . && docker push ekellener/minecraft-amd64
script:
- docker run -d  -e docker_username=$docker_username -e docker_password=$docker_password
  -e manifest_platforms="linux/arm,linux/amd64" -e manifest_template="ekellener/minecraft-ARCH"
  -e manifest_target="ekellener/minecraft-multi"  --name manifest-tool-build ekellener/manifest-tool-docker
- if [ ! -f ${CACHE_FILE_BUILD} ]; then docker save ekellener/minecraft-build | gzip
  > ${CACHE_FILE_BUILD}; fi
- if [ ! -f ${CACHE_FILE_AMD64} ]; then docker save ekellener/minecraft-amd64 | gzip
  > ${CACHE_FILE_AMD64}; fi
- if [ ! -f ${CACHE_FILE_ARM} ]; then docker save ekellener/minecraft-arm     | gzip
  > ${CACHE_FILE_ARM}; fi
- if [ ! -f ${CACHE_FILE_MANIFEST} ]; then docker save ekellener/manifest-tool-docker
  | gzip > ${CACHE_FILE_MANIFEST}; fi
