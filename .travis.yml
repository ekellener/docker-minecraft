language: bash 
sudo: required
env:
- secure: kCupc5Sg5M6/hgK3qLgvmeXcR0UssYtghfU+hvvfggOq/tpLjvfqo4hsPjQYvQ8bt4841M9L2OrgcGi2+r9mhJUABRkiUkxyQ0+OF9NQp/u91/cV/Vaawk96OdQnPnkhu32N45vuhfKLK6yRsFLVNpmfQwG2Tn8hraPAlCaPLL2bXwHtTbcFDPXuuE/dxJkC3kkIus+C2AqKsk4u4YhmSmZDlhTfe1KHwrGiGseDbT7RZM9ezC3ELQUBDLbxR7HYL+ciFLX35J4b5l/p56GrN75P7bfXK8xTiWy3PmyKN2OABCYFkOvdLpUXmRlELTjDpLxELIpUpAQHcJ0VIRcM5zJRUireZeoqVEpDc7CCcM+ssZ9JjhsGi3HmsaFhoyk5wRtWucnYr4TQxbaFqhojKYfm4wKCeP2P0BlvGOKWkiB+YtWwl85Q0XhxgLCZgBhZJVHBoMsZrq9kD6o81+xthj3UXVEvucgZMEQVkvm+akJ8iRvZEjcL4EvJ2F8YodVIzQtKP7sVYUQjNQkMFolQwDjSEjsEsuqfF+27w26qHhAcz6Tbe6IgEmOCILHJ4rC4itppBChgaqZDiiojUpFxOV24dqPrZGycFd2YWuBHmkpd4RT4vigpab9U8ILmzjFBKj06Iqtp1sjKsjcnDPhIVe8S6mj3o0NuAla2YBqngC8=
- secure: XN8/A3zZg2GfzRaEo7KMhfGF2gQN8OOk06bBz2Nm1XOmPw24KCReKiUllq5TfDPWp9J7KSXhtcr17jA2OOAzcgB/9vNXiRzvzFzQVIInbPyD7V/u9FqnTnhOJBk1iBNTzMBxswYTNa/WaMLdvIeNjzULN86xt8qLbm4v1fEbQupgTVsf8Bis0nGPe9O1JX6Q2t9KQjzbFYcNOwT2OuhcrS478fk7YagWPJU//fvyV/HEnsHryZzFyacf65W7wjskEqFh0jXn3Supe111xLYG8aUf4VU4WON2pNmB0RAGNnFM0do5Un+lwQ1Cwwe6Wsp0nBwUax5/2qqEdURj1WnFos1/QmtGvkztESIf1K24R6rLJOU0RRq2bpuzPlDS0LYmX6CRIxnRHTxHhZnf6Y40PEhHOvuglF5ZLeWzJ0Sy6xdWwkIf7qAnbtQVhSXKt7BCzV40j+xS/yEvo3qx9RveIH1PNuLYLcivG3vVdsnlNjfFjSggcINf2jFicaDA34mT2QO+0AsfkGiDroJzzhcLvEd/wcOSoc2IQtR93WOCtf03Lj1dBsWi2ftDKBG037b8ekCEP3FdiqaVf8eGLxHq3oF/aMTWiq68NiXtGqqVr573PSgNLUsoNs2y4LqJqOy55HJFtlkPY9LtBo4q3JoM3fucQS9SAn18I1d+AytB9HY=
   - CACHE_DIR=$HOME/.cache/docker
   - CACHE_FILE_ARM=$CACHE_DIR/arm.tar.gz
   - CACHE_FILE_AMD64=$CACHE_DIR/amd64.tar.gz
   - CACHE_FILE_BUILD=$CACHE_DIR/build.tar.gz
   - CACHE_FILE_MANIFEST=$CACHE_DIR/manifest.tar.gz

cache:
  directories:
    - $CACHE_DIR
services:
- docker
before_install:
- echo $CACHE_FILE_BUILD
- if [ -f ${CACHE_FILE_BUILD} ]; then gunzip -c ${CACHE_FILE_BUILD} | docker load; fi
- if [ -f ${CACHE_FILE_AMD64} ]; then gunzip -c ${CACHE_FILE_AMD64} | docker load; fi
- if [ -f ${CACHE_FILE_ARM} ]; then gunzip -c ${CACHE_FILE_ARM} | docker load; fi
- if [ -f ${CACHE_FILE_MANIFEST} ]; then gunzip -c ${CACHE_FILE_MANIFEST} | docker load; fi
- docker run --entrypoint=/bin/sh --rm -i  -v ${PWD}:/host ekellener/minecraft-build -c 'cp craft*.jar /host'
install:
- docker login -u $docker_username -p $docker_password
- docker pull ekellener/manifest-tool-docker &
- docker build -t ekellener/minecraft-arm -f Dockerfile.arm . && docker push ekellener/minecraft-arm &
- docker build -t ekellener/minecraft-amd64 -f Dockerfile.amd64 . && docker push ekellener/minecraft-amd64 

script:
- docker run -d  -e docker_username=$docker_username -e docker_password=$docker_password
  -e manifest_platforms="linux/arm,linux/amd64" -e manifest_template="ekellener/minecraft-ARCH"
  -e manifest_target="ekellener/minecraft-multi"  --name manifest-tool-build ekellener/manifest-tool-docker
- if [ ! -f ${CACHE_FILE_BUILD} ]; then docker save ekellener/minecraft-build | gzip > ${CACHE_FILE_BUILD}; fi 
- if [ ! -f ${CACHE_FILE_AMD64} ]; then docker save ekellener/minecraft-amd64 | gzip > ${CACHE_FILE_AMD64}; fi
- if [ ! -f ${CACHE_FILE_ARM} ]; then docker save ekellener/minecraft-arm4 | gzip > ${CACHE_FILE_ARM}; fi
- if [ ! -f ${CACHE_FILE_MANIFEST} ]; then docker save ekellener/manifest-tool-docker | gzip > ${CACHE_FILE_MANIFEST}; fi

